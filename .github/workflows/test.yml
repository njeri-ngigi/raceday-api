name: Run raceday-api Nestjs Tests

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Install Docker Compose
      - name: Install Docker Compose
        run: |
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

          sudo add-apt-repository \
            "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) \
            stable"

          sudo apt-get install docker-compose

          # Check the version:
          docker-compose --version

      - name: Print DB env variables
        run: |
          echo ">>>> DB_USER=${DB_USER}"
          echo ">>>> DB_PASSWORD=${DB_PASSWORD}"
          echo ">>>> DB_NAME_TEST=${DB_NAME_TEST}"
          echo ">>>> JWT_SECRET=${JWT_SECRET}"
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME_TEST: ${{ secrets.DB_NAME_TEST }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

      # Step 4: Build the Docker images and run the tests
      - name: Run tests with Docker Compose
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME_TEST: ${{ secrets.DB_NAME_TEST }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          docker-compose -f docker-compose.test.yml up --abort-on-container-exit --exit-code-from test
          docker-compose -f docker-compose.test.yml down -v --remove-orphans
